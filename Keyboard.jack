class Keyboard { //FINISHED

  function void init() {
    return;
  }

  /** : Returns the character of the currently pressed key
  on the keyboard; if no key is currently pressed, returns 0. Recognizes all
  the values in the Hack character set (see appendix 5). These include the
  characters newLine (128, return value of String.newLine()), backSpace (129,
  return value of String.backSpace ()), leftArrow (130), upArrow (131), rightArrow
  (132), downArrow (133), home (134), end (135), pageUp (136), pageDown
  (137), insert (138), delete (139), esc (140), and f1–f12 (141–152). */
  function char keyPressed() {
    var char key;
    let key = Memory.peek(24576);
    return key;
  }

  /** : Displays the message, reads from the
  keyboard the entered string of characters until a newLine character is
  detected, displays the string, and returns the string. Also handles user
  backspaces. */
  function String readLine(String message) {
    var String s;
    var Char c;
    var boolean nLine;

    let nLine = false;
    let s = String.new(60);
    do Output.printString(message);

    while (~(nLine)) {
      let c = Keyboard.readChar();

      if (c = String.newLine()) {
        let nLine = true;
      }

      if (c = String.backSpace()) {
        if (~(s.length() = 0)) {
          do s.eraseLastChar();
        }
      }

      if (~(nLine)) {
        do s.appendChar(c);
      }
    }

    return s;
  }

  /** Displays the message, reads from the
  keyboard the entered string of characters until a newLine character is
  detected, displays the string on the screen, and returns its integer value
  until the first non-digit character in the entered string is detected. Also
  handles user backspaces. */
  function int readInt(String message) {
    var String s;
    var char c;
    var boolean finished;
    var int i;

    let finished = false;
    let s = String.new(60);

    do Output.printString(message);
    while (~(finished)) {
      let c = Keyboard.readChar();
      //if c != backspace && (c == (\n | !type(int)) | '-')
      if ((~(c = String.backSpace())) & ((c = String.newLine()) | ((c < 48) & (~(c = 45))) | ((c > 57) & (~(c = 45))))) {
        let finished = true;
      }

      if (c = String.backSpace()) {
        if (~(s.length() = 0)) {
          do s.eraseLastChar();
        }
      }

      if (~(finished)) {
        do s.appendChar(c);
      }
    }

    let i = s.intValue();
    do s.dispose();

    return i;
  }

  /**Waits until a keyboard key is pressed and released,
  then displays the corresponding character on the screen and returns the
  character. */
  function char readChar() {
    var char key;
    var char c;
    var char cursor;

    let key = Keyboard.keyPressed();
    let cursor = 124;

    while (~(key = 0)) {
      let key = Keyboard.keyPressed();
    }

    while (key = 0) {
      do Output.printChar(cursor);
      do Sys.wait(25);
      do Output.backSpace();
      do Sys.wait(25);
    }

    let c = key;
    while (~(key = 0)) {
      let key = Keyboard.keyPressed();
    }

    do Output.printChar(c);
    return c;
  }

}
